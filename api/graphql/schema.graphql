type Query {
  persons(
    pagination: Pagination
    sorting: Sorting
  ): PersonsConnection!
  """
  It returns the unique characters count for each text-string given.

  - It does not distinguish between upper and lower case.
  - It does not count spacing characters.

  Returns null for non-valid string.
  """
  countUniqueCharacters(
    input: CountUniqueCharactersInput!
  ): [UniqueCharactersResponse!]!
}

#############################
###    ENUMS & UNIONS     ###
#############################

enum PeopleSortField {
  CREATED_AT
  NAME
  TITLE
  UPDATED_AT
}

enum SortDirection {
  ASC
  DESC
}

#############################
###        INPUTS         ###
#############################

input Sorting {
  field: PeopleSortField!
  direction: SortDirection!
}

input Pagination {
  page: Int!
  size: Int!
}

input CountUniqueCharactersInput {
  texts: [String]!
}

#############################
###        TYPES          ###
#############################

type UniqueCharactersResponse {
  text: String
  keyValuePair: [KeyNumericValuePair]
}

type KeyNumericValuePair {
  key: String!
  value: Int!
}

type PageInfo {
  perPage: Int!
  currentPage: Int!
  nextPage: Int
  prevPage: Int
  totalPages: Int!
  totalCount: Int!
}

type Person {
  id: ID!
  name: String!
  email: String!
  jobTitle: String!
}

type PersonsConnection {
  pageInfo: PageInfo!
  edges: [Person!]!
}
